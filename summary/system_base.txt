操作系统
1. 进程和线程的区别。

	1. 地址空间及其它资源
		进程间相互独立，线程间共享
	2. 通信
		IPC与读写共享数据的区别
		
2. 死锁的必要条件，怎么处理死锁。
	进程间相互等待切不释放自己手中的资源导致死锁产生
	
	
3. Window内存管理方式：段存储，页存储，段页存储。
	
	逻辑地址到线性地址使用段式管理
	段标识符		:	段内偏移量
	索引  : TI : RPL:	段内偏移量
	 13   : 1  :  2 :       16
	 
	 
	段描述符
		BASE	:	LIMIT	
		16		:	16		
	
	分段内存:
		一些全局的段描述符，就放在“全局段描述符表(GDT)”中，
		一些局部的，例如每个进程自己的，就放在所谓的“局部段描述符表(LDT)”中。
		那究竟什么时候该用GDT，什么时候该用LDT呢？这是由段选择符中的T1字段表示的，=0，表示用GDT，=1表示用LDT。
		GDT在内存中的地址和大小存放在CPU的gdtr控制寄存器中，而LDT则在ldtr寄存器中。
	
		给定一个完整的逻辑地址[段选择符：段内偏移地址]，
		1、看段选择符的T1=0还是1，知道当前要转换是GDT中的段，还是LDT中的段，再根据相应寄存器，得到其地址和大小。我们就有了一个数组了。
		2、拿出段选择符中前13位，可以在这个数组中，查找到对应的段描述符，这样，它了Base，即基地址就知道了。
		3、把Base + offset，就是要转换的线性地址了
	
	线性地址到物理地址使用页式管理
	页目录	:	页表	:	偏移地址
	   10        10            12
	分页内存:
		每个进程的页目录是唯一的，运行时放在CR3寄存器中，是进行地址转换的开始点。
		0x08147258
		0000100000 0101000111 001001011000
		先根据0000100000(32)，在页目录数组中索引，找到其元素中的地址，取其高20位，找到页表的地址，
		页表的地址是由内核动态分配的，
		再加上offset，得到物理地址
		
		注意其中的两个数组：
			页目录数组和页表数组。
			页目录数组中保存页表地址。
			页表数组中保存页的起始地址。
	
4. 进程的几种状态。
	1. 就绪态
	2. 运行态
	3. 阻塞态
	
5. IPC几种通信方式。
	1. 管道
	2. 信号量
	3. 消息队列
	4. 共享内存
	5. 套接字
	
6. 什么是虚拟内存。
	虚拟内存的概念，说直白点是对物理内存的一个管理
	解决什么问题
		多个进程在内存中共存的问题，因为采用虚拟化的技术，操作的不再是具体的物理内存。
		这样其实中间多了一层映射。如果两个进程中有操作同一个内存地址就变的容易。
		
7. 虚拟地址、逻辑地址、线性地址、物理地址的区别。
	虚拟地址：
	逻辑地址：内部和编程使用， 取地址符&的到的地址
	线性地址：逻辑地址先转成线性地址，然后在转换成物理地址
	物理地址：加载到内存地址寄存器的地址，内存单元的真正地址
	



