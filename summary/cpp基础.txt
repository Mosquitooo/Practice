
1. 多态性有哪些。
	编译时多态性：通过重载函数实现
	运行时多态性：通过虚函数实现

2. 动态绑定怎么实现
	通过类对象中的vptr和虚函数的索引值.
	vptr指向类的虚函数表. 虚函数表中保存虚函数的真实地址, 同时在编译期确定虚函数的索引。

3. 类型转换有哪些
	static_cast:
	const_cast:
	dynmic_cast:
	reinterpret_cast:

4. +操作符如何定义

5. 内存对齐的原则
	变量的起始位置是类型的整数倍.
	总体大小是类行最大大小的整数倍.
	
6. 模版怎么实现

7. 指针和const的用法

8. 虚函数，纯虚函数， 虚析构

9. 内联函数、与宏函数的区别

10. const 用处和优点

11. 基本排序算法实现，最好时间复杂度 和 平均时间复杂度

12. extern C 作用

13. C与C++的区别

14. 继承机制中对象是怎样转换的

15. 继承机制中引用和指针如何转换

16. 虚函数，虚函数表里的内存如何分配

17. 如何实现只能动态分配类对象，不能定义类对象？

18. 红黑树的定义和解释？

19. 静态成员函数和数据成员有什么意义？

20. 模版特化的概念，为什么特化？

21. explicit是干什么用的？

22. strcpy返回类型是干嘛用的？

23. 内存溢出有那些因素？

24. 为什么要用static_cast转换而不用c语言中的转换？

25. 异常机制是怎么回事？

26. 迭代器删除元素的会发生什么？

27. 必须在构造函数初始化式里进行初始化的数据成员有哪些？

28.  auto_ptr类的实现