TCP/IP
1. TCP/IP各层的结构与功能，都有哪些协议。
	应用层: SMTP FTP HTTP
	传输层: TCP UDP
	网际互联层: IP
	网络接口层

2. TCP与UDP的区别。
	TCP: 面向连接 可靠 适用一次传输大量数据和要求得到响应的应用程序
	UDP: 无连接 不可靠 适用小量数据，可靠性由应用层负责

3. TCP报文结构。
	
4. TCP的三次握手与四次挥手过程，各个状态名称与含义，TIMEWAIT的作用。
	
	TIMEWAIT的作用：
	1. 要实现TCP全双工连接的正常终止，必须处理终止序列四个分节中任何一个分节的丢失情况，
		主动关闭 的客户端必须维持状态信息进入TIME_WAIT状态。
		
	2. TCP不允许处于TIME_WAIT状态的连接启动一个新的化身，
		因为TIME_WAIT状态持续2MSL，就可以保证当成功建立一个TCP连接的时候，来自连接先前化身的重复分组已经在网络中消逝。
		
5. TCP拥塞控制。
	慢启动算法：慢启动的意思是，刚刚加入网络的连接，一点一点地提速。
		慢启动的算法如下(cwnd全称Congestion Window)：
		1）连接建好的开始先初始化cwnd = 1，表明可以传一个MSS大小的数据。
		2）每当收到一个ACK，cwnd++; 呈线性上升
		3）每当过了一个RTT，cwnd = cwnd*2; 呈指数让升
		
	拥塞避免：
		当cwnd >= ssthresh时，就会进入“拥塞避免算法”。一般来说ssthresh的值是65535，单位是字节，当cwnd达到这个值时后，算法如下：
		1）收到一个ACK时，cwnd = cwnd + 1/cwnd
		2）当每过一个RTT时，cwnd = cwnd + 1
		这样就可以避免增长过快导致网络拥塞，慢慢的增加调整到网络的最佳值。
		
	拥塞发生：
		
	快速恢复:
		Fast Recovery算法如下：
		cwnd = sshthresh  + 3 * MSS （3的意思是确认有3个数据包被收到了）
		重传Duplicated ACKs指定的数据包
		如果再收到 duplicated Acks，那么cwnd = cwnd +1
		如果收到了新的Ack，那么，cwnd = sshthresh ，然后就进入了拥塞避免的算法了。

6. TCP滑动窗口与回退N针协议。

Nagle算法: 避免发送大量小包
	

CORK算法 : 理想情况下，完全避免发送小包，只发送满包以及不得不发的小包.
			CORK并不会将连接完全塞住。
			内核其实并不知道应用层到底什么时候会发送第二批数据用于和第一批数据拼接以达到MTU的大小，
			因此内核会给出一个时间限制，在该时间内没有拼接成一个大包（努力接近MTU）的话，内核就会无条件发送。
			也就是说若应用层程序发送小包数据的间隔不够短时，TCP_CORK就没有一点作用，
			反而失去了数据的实时性（每个小包数据都会延时一定时间再发送）。

延迟确认机制:
	Server接收到数据之后并不会马上回复ACK, 而是等待一段时间希望ACK和应答数据一起发送

7. Http的报文结构。
	请求报文：
		请求方法|空格|URL|空格|协议版本|\n\r
		头部字段名:值|\n\r
		...
		\n\r
		?param1=value1&param2=value2
8. Http的状态码含义。
		1xx 消息，一般是告诉客户端，请求已经收到了，正在处理，别急...
		2xx 处理成功，一般表示：请求收悉、我明白你要的、请求已受理、已经处理完成等信息.
		3xx 重定向到其它地方。它让客户端再发起一个请求以完成整个处理。
		4xx 处理发生错误，责任在客户端，如客户端的请求一个不存在的资源，客户端未被授权，禁止访问等。
		5xx 处理发生错误，责任在服务端，如服务端抛出异常，路由出错，HTTP版本不支持等。

9. Http request的几种类型。
	
10. Http1.1和Http1.0的区别
	1，HTTP/1.0协议使用非持久连接,即在非持久连接下,一个tcp连接只传输一个Web对象,；
	2，HTTP/1.1默认使用持久连接(然而,HTTP/1.1协议的客户机和服务器可以配置成使用非持久连接)
	
11. Http怎么处理长连接。
	
12. Cookie与Session的作用与原理。
	session用来跟踪客户端和服务器之间的状态. 
	cookie用来确认客户端是属于那个session.
	
13. 电脑上访问一个网页，整个过程是怎么样的：DNS、HTTP、TCP、OSPF、IP、ARP。
	
14. Ping的整个过程。ICMP报文是什么。
	
15. C/S模式下使用socket通信，几个关键函数。
	socket: 创建一个套接字
	bind: 
	listen:
	accept:
	read:
	write:

16. IP地址分类。
	A类地址:
	B类地址:
	C类地址:

17. 路由器与交换机区别。
	路由器: 同一局域网的各个用户共用一个宽带，会相互影响
	交换机: 同意局域网的用户各自拨号上网，无影响
	
	1、工作层次不同最初的的交换机是工作在OSI／RM开放体系结构的数据链路层，也就是第二层，而路由器一开始就设计工作在OSI模型的网络层。由于交换机工作在OSI的第二层（数据链路层），所以它的工作原理比较简单，而路由器工作在OSI的第三层（网络层），可以得到更多的协议信息，路由器可以做出更加智能的转发决策。
	2、回路：根据交换机地址学习和站表建立算法，交换机之间不允许存在回路。一旦存在回路，必须启动生成树算法，阻塞掉产生回路的端口。而路由器的路由协议没有这个问题，路由器之间可以有多条通路来平衡负载，提高可靠性。
	3、子网划分：交换机只能识别ＭＡＣ地址。ＭＡＣ地址是物理地址，而且采用平坦的地址结构，因此不能根据ＭＡＣ地址来划分子网。而路由器识别ＩＰ地址，ＩＰ地址由网络管理员分配，是逻辑地址且ＩＰ地址具有层次结构，被划分成网络号和主机号，可以非常方便地用于划分子网，路由器的主要功能就是用于连接不同的网络。
	4、负载集中：交换机之间只能有一条通路，使得信息集中在一条通信链路上，不能进行动态分配，以平衡负载。而路由器的路由协议算法可以避免这一点，ＯＳＰＦ路由协议算法不但能产生多条路由，而且能为不同的网络应用选择各自不同的最佳路由。 
	5、广播控制：交换机只能缩小冲突域，而不能缩小广播域。整个交换式网络就是一个大的广播域，广播报文散到整个交换式网络。而路由器可以隔离广播域，广播报文不能通过路由器继续进行广播。 
	6、介质相关：交换机作为桥接设备也能完成不同链路层和物理层之间的转换，但这种转换过程比较复杂，不适合ＡＳＩＣ实现，势必降低交换机的转发速度。因此目前交换机主要完成相同或相似物理介质和链路协议的网络互连，而不会用来在物理介质和链路层协议相差甚元的网络之间进行互连。而路由器则不同，它主要用于不同网络之间互连，因此能连接不同物理介质、链路层协议和网络层协议的网络。路由器在功能上虽然占据了优势，但价格昂贵，报文转发速度低。
	7、保密问题：虽说交换机也可以根据帧的源ＭＡＣ地址、目的ＭＡＣ地址和其他帧中内容对帧实施过滤，但路由器根据报文的源ＩＰ地址、目的ＩＰ地址、ＴＣＰ端口地址等内容对报文实施过滤，更加直观方便。

网络其实大体分为两块，一个TCP协议，一个HTTP协议，只要把这两块以及相关协议搞清楚，一般问题不大。
推荐书籍：《TCP/IP协议族》
 
