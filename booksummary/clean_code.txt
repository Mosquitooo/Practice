
1. 变量
	有意义的命名

2. 函数
	只做一件事
	函数参数控制在三个之内，如果函数需要三个以上的参数，则需要把一部分参数封装成类了.

3. 注释
	注释本身就是一种糟糕的做法

4. 格式

5. 数据与对象
	数据和对象的反对称性(面向过程与面向对象的区别)

6. 错误处理
	1. 使用异常而非错误码
	2. 不要传递和返回NULL值

7. 单元测试
	1. 保持测试整洁性
	2. 每个测试一个断言
	3. F.I.R.S.T

8. 类
	1. 类应该很短小
		单一权责原则: 类和模块应该有且只有一条可以修改的理由.
		内聚
	2. 为了修改而组织类

9. 系统
	将系统的构造与使用分开(与延迟初始化相对立)
		=》工厂模式
		=》依赖注入

10. 迭进
	1. 运行所有测试 =》重构
	2. 不可重复(DRY)
	3. 写可读性高的代码
	4. 尽可能减少类和方法
	
11. 并发编程
	1. 并发防御原则
		单一权责原则
		限制数据作用域(临界区)
		使用数据复本
		线程应尽可能独立
	
	2. 了解执行模型
		生产者消费者模型
		
		读者作者模型
		
		宴席哲学家模型
			
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	